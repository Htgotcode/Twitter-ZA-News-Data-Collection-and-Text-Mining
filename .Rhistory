mutate(item2 = reorder(item2, correlation)) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()
set.seed(1234)
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
media_agency_section_words <- media_agency_df %>%
mutate(section = row_number() %/% 10) %>%
filter(section > 0) %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word)
# count words co-occuring within sections
word_pairs <- media_agency_section_words %>%
pairwise_count(word, section, sort = TRUE)
# we need to filter for at least relatively common words first
word_cors <- media_agency_section_words %>%
group_by(word) %>%
filter(n() >= 20) %>%
pairwise_cor(word, section, sort = TRUE)
# Correlation of next word
# word_cors %>%
#   filter(item1 == "vaccine")
word_cors %>%
filter(item1 %in% c("covid", "vaccine", "lockdown", "guateng")) %>%
group_by(item1) %>%
slice_max(correlation, n = 6) %>%
ungroup() %>%
mutate(item2 = reorder(item2, correlation)) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip()
set.seed(1234)
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE, size = 2) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE, size = 10) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE, lwd = 10) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
?geom_edge_link
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE, edge_width = 5) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE, edge_width = 4) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
word_cors %>%
filter(correlation > .7) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE, edge_width = 3) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
vader_df <- read_csv("data_in/vader.csv")
vader_df <- vader_df(media_agency_df$text)
vader_df <- vader_df(media_agency_df$text)
write_as_csv(vader_df, "data_in/vader")
write_as_csv(vader_df, "data_in/vader")
#sentiment
ggplot(data=media_vader_df, aes(x=created_at, y=rollmean(compound, 30,  na.pad=TRUE))) +
geom_line(color="pink", size=.5)+
geom_smooth() +
theme_minimal()+
facet_wrap(~screen_name) +
scale_y_continuous(expand = c(0,0), breaks = c(-0.4,-0.2,0,0.2,0.4)) +
ylim(c(-0.4, 0.4))
vader_df <- read_csv("data_in/vader.csv")
vader_df <- vader_df %>% mutate("X1" = row_number())
media_agency_df <- media_agency_df %>% mutate("X1" = row_number())
media_vader_df <- media_agency_df %>% left_join(vader_df, by = "X1")
#sentiment
ggplot(data=media_vader_df, aes(x=created_at, y=rollmean(compound, 30,  na.pad=TRUE))) +
geom_line(color="pink", size=.5)+
geom_smooth() +
theme_minimal()+
facet_wrap(~screen_name) +
scale_y_continuous(expand = c(0,0), breaks = c(-0.4,-0.2,0,0.2,0.4)) +
ylim(c(-0.4, 0.4))
#sentiment
ggplot(data=media_vader_df, aes(x=created_at, y=rollmean(compound, 30,  na.pad=TRUE))) +
geom_line(color="pink", size=.5)+
geom_smooth() +
theme_minimal()+
facet_wrap(~screen_name) +
scale_y_continuous(expand = c(0,0), breaks = c(-0.4,-0.2,0,0.2,0.4))
#sentiment
ggplot(data=media_vader_df, aes(x=created_at, y=rollmean(compound, 30,  na.pad=TRUE))) +
geom_line(color="pink", size=.5)+
geom_smooth() +
theme_minimal()+
facet_wrap(~screen_name) +
scale_y_continuous(expand = c(0,0))
#sentiment
ggplotly(ggplot(data=media_vader_df, aes(x=created_at, y=rollmean(compound, 30,  na.pad=TRUE))) +
geom_line(color="pink", size=.5)+
geom_smooth() +
theme_minimal()+
facet_wrap(~screen_name) +
scale_y_continuous(expand = c(0,0)))
#sentiment
ggplotly(ggplot(data=media_vader_df, aes(x=created_at, y=compound)) +
geom_line(color="pink", size=.5)+
geom_smooth() +
theme_minimal()+
facet_wrap(~screen_name) +
scale_y_continuous(expand = c(0,0)))
#sentiment
ggplotly(ggplot(data=media_vader_df, aes(x=created_at)) +
geom_line(aes(y=rollmean(compound, k=30, na.pad = TRUE)), color="pink", size=.5)+
geom_smooth(aes(y=compound)) +
theme_minimal()+
facet_wrap(~screen_name) +
scale_y_continuous(expand = c(0,0)))
media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)) %>%
ggplotly(ggplot(aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")))
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")))
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0.8),
legend.background = element_blank(),
legend.key = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
panel.grid.major.y = element_line( linetype = "dotted"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_blank()
))
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0.8),
legend.background = element_blank(),
legend.key = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
))
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0.8),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank()
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0.8),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
))
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
))
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(-1,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
))
?ggplotly
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
, tooltip = "total")
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
, tooltip = c("total", "favorite_daily", "retweet_daily"))
# mean for the day
media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)) %>%
ggplot(aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
))
# media_vader_df %>% select(favorite_count, retweet_count) %>% mutate(favorite_count + retweet_count)
# mean for the day
media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)) %>%
ggplot(aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
media_vader_df %>%
filter(screen_name == "dailymaverick") %>%
slice_max(favorite_count + retweet_count)
class(media_vader_df$created_at)
# top tweets
# eNCA Call for ministers over 60 to resign https://t.co/wlEjJGEpuk
# SCORPIO\r\nFloyd Shivambu’s brother quietly pays back Rm admits he received the VBS money gratuitouslyLWeOmNWp
# TimesLIVE	Do you approve of Duduzane running for president? https://t.co/hCDVQGHRWy
# News24 Coca-Cola lost $4 billion in market value after Cristiano Ronaldo suggested people drink water instead | @BISouthAfrica
# SABCNews BREAKING NEWS: King of Eswatini has fled amid public violence in the country https://t.co/1jv8vVCw9d
# mean for the day
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
, tooltip = c("total", "favorite_daily", "retweet_daily"))
# mean for the day
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
, tooltip = c("total", "favorite_daily", "retweet_daily", "created_at"))
# mean for the day
ggplotly(ggplot(data = media_vader_df %>% mutate(created_at = as.Date(created_at)) %>%  group_by(created_at) %>% mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count)), aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
, tooltip = c("total", "favorite_daily", "retweet_daily", "created_at"))
#peak tweets
media_agency_df %>% filter(created_at = "2021-05-01")
#peak tweets
media_agency_df %>% filter(created_at == "2021-05-01")
#peak tweets
media_agency_df %>% mutate(created_at = as.Date(created_at)) %>% filter(created_at == "2021-05-01")
media_vader_df <- media_vader_df %>%
mutate(created_at = as.Date(created_at)) %>%
group_by(created_at) %>%
mutate(retweet_daily = mean(retweet_count), favorite_daily = mean(favorite_count), total = mean(favorite_count + retweet_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01") %>% select(max(total))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01") %>% select(total)
# mean for the day
ggplotly(ggplot(data = media_vader_df, aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
, tooltip = c("total", "favorite_daily", "retweet_daily", "created_at"))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01") %>% select(retweets, favorites)
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01") %>% select(retweet_count, favorite_count)
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01") %>% select(max(retweet_count, favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01", max((retweet_count, favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01", max((retweet_count, favorite_count)))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01", max((retweet_count + favorite_count)))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" && max((retweet_count + favorite_count)))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" ) %>% filter(max(retweet_count + favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" ) %>% filter(max(retweet_count + favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" ) %>% select(max(retweet_count + favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" ) %>% filter(value = max(retweet_count + favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" ) %>% filter(value == max(retweet_count + favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" ) %>% filter(text == max(retweet_count + favorite_count))
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" ) %>% select(media_vader_df$retweet_count)
#peak tweets
media_vader_df %>% filter(created_at == "2021-05-01" )
#peak tweets
media_vader_df %>%
filter(created_at == "2021-05-01" ) %>%
slice_max(favorite_count + retweet_count)
# mean for the day
ggplotly(ggplot(data = media_vader_df, aes(created_at)) +
geom_ribbon(aes(ymin = 0, ymax = total, fill = "Total")) +
geom_ribbon(aes(ymin = 0, ymax = favorite_daily, fill = "Favorites")) +
geom_ribbon(aes(ymin = 0, ymax = retweet_daily, fill = "Retweets")) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
legend.justification=c(0,0),
legend.position=c(0,0),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank(),
plot.title = element_text(size=14, face="bold", margin = margin(0, 0, 10, 0), hjust = 0),
plot.caption = element_text(face="bold", hjust = 0),
)
, tooltip = c("total", "favorite_daily", "retweet_daily", "created_at"))
media_vader_df %>%
filter(created_at == "2021-05-23" ) %>%
slice_max(favorite_count + retweet_count)
tidy_matrix <- tidy_covid_media_df %>% count(screen_name, word) %>% cast_dfm(screen_name, word, n)
tidy_matrix <- tidy_media_df %>% count(screen_name, word) %>% cast_dfm(screen_name, word, n)
tidy_matrix <- tidy_media_df %>% count(screen_name, word) %>% cast_dfm(screen_name, word, n)
media_lda <- LDA(tidy_matrix, k = 5, control = list(seed = 1234))
media_lda <- LDA(tidy_matrix, k = 5, control = list(seed = 1234))
install.packages("ldatuning")
install.packages("devtools")
devtools::install_github("nikita-moor/ldatuning")
library("ldatuning")
library("topicmodels")
data("AssociatedPress", package="topicmodels")
dtm <- AssociatedPress[1:10, ]
result <- FindTopicsNumber(
tidy_matrix,
topics = seq(from = 2, to = 15, by = 1),
metrics = c("Griffiths2004", "CaoJuan2009", "Arun2010", "Deveaud2014"),
method = "Gibbs",
control = list(seed = 77),
mc.cores = 2L,
verbose = TRUE
)
FindTopicsNumber_plot(result)
View(tidy_matrix)
media_agency_df <- read_csv("data_in/media_agency_tweets.csv")
media_agency_df <- media_agency_df[ , colSums(is.na(media_agency_df)) < nrow(media_agency_df)]
