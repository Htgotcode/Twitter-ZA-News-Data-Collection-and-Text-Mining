library(rtweet)
library(ggplot2)
origop <- options("httr_oauth_cache")
options(httr_oauth_cache = TRUE)
api_key <- "5PgtS7ljq5ZbBoXnemU5qHe62"
api_secret <- "M44LeduQ4zoyDxQIkAFjeIJrpDhWnb5xASDvhahTlrAvOhN7fx"
access_token <- "743029724750942208-JLEp26XrjwvQ1CPJUXwvdUMLka82cgx"
access_secret <- "XRMeMBaOgQy2BC1Bd9iJARfMIyK40VKyII1ZRcf9nS0qd"
token <- create_token(
app = "KyleResearchApp",
consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_secret
)
covid_19_tweets <- search_tweets("coronavirus south africa", n=1000)
ts_plot(covid_19_tweets, by="hours") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold"))+
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Covid-19 Around 4pm, June 21, 2021",
subtitle = "Tweet counts aggregated by second",
caption = "\nSource: Data collected form Twitter's REST API via rtweet"
)
covid_19_tweets <- search_users(q = "News24", n = 100)
covid_19_tweets
covid_19_tweets <- search_tweets(q = 14697575, n = 100)
covid_19_tweets
covid_19_tweets <- search_tweets(q = "14697575", n = 100)
covid_19_tweets
?rtweet
covid_19_tweets <- rtweet::lookup_users(users = 14697575)
covid_19_tweets
covid_19_tweets <- rtweet::lookup_tweets(statuses = 14697575)
covid_19_tweets
covid_19_tweets <- rtweet::lookup_tweets(statuses = 14697575,parse = TRUE)
covid_19_tweets
covid_19_tweets <- rtweet::lookup_tweets(statuses = 14697575)
?lookup_tweets
covid_19_tweets <- rtweet::lookup_tweets(statuses = "14697575")
covid_19_tweets
covid_19_tweets <- rtweet::lookup_tweets(statuses = "News24")
covid_19_tweets
covid_19_tweets <- rtweet::lookup_tweets(statuses = "@News24")
covid_19_tweets
user_news24 <- rtweet::lookup_users(statuses = "News24")
user_news24 <- rtweet::lookup_users(users = "News24")
covid_19_tweets
tweets_data(user_news24)
View(user_news24)
users_data(user_news24)
get_my_timeline(n = 100, max_id = 14697575)
get_timeline(14697575, n = 100)
get_timeline(user_news24, n = 100)
View(user_news24)
tweets_news24 <- get_timeline(14697575, n = 100)
library(rtweet)
library(ggplot2)
origop <- options("httr_oauth_cache")
options(httr_oauth_cache = TRUE)
api_key <- "5PgtS7ljq5ZbBoXnemU5qHe62"
api_secret <- "M44LeduQ4zoyDxQIkAFjeIJrpDhWnb5xASDvhahTlrAvOhN7fx"
access_token <- "743029724750942208-JLEp26XrjwvQ1CPJUXwvdUMLka82cgx"
access_secret <- "XRMeMBaOgQy2BC1Bd9iJARfMIyK40VKyII1ZRcf9nS0qd"
token <- create_token(
app = "KyleResearchApp",
consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_secret
)
library(rtweet)
library(ggplot2)
origop <- options("httr_oauth_cache")
options(httr_oauth_cache = TRUE)
api_key <- "5PgtS7ljq5ZbBoXnemU5qHe62"
api_secret <- "M44LeduQ4zoyDxQIkAFjeIJrpDhWnb5xASDvhahTlrAvOhN7fx"
access_token <- "743029724750942208-JLEp26XrjwvQ1CPJUXwvdUMLka82cgx"
access_secret <- "XRMeMBaOgQy2BC1Bd9iJARfMIyK40VKyII1ZRcf9nS0qd"
token <- create_token(
app = "KyleResearchApp",
consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_secret
)
user_news24 <- rtweet::lookup_users(users = "News24")
tweets_news24 <- get_timeline(14697575, n = 100)
library(dplyr)
View(tweets_news24)
tweet_text_news24 <- tweets_news24 %>%
select(status_id, text)
View(tweet_text_news24)
library(tidytext)
install.packages("tidytext")
library(tidytext)
tweet_text_news24 %>%
unnest_tokens(word, text)
library(stringr)
tweet_text_news24 <- tweets_news24 %>%
select(screen_name, status_id, text)
tweet_text_news24 %>%
unnest_tokens(word, text)
tweet_text_news24 <- tweets_news24 %>%
select(screen_name, status_id, text)
tweet_text_news24 %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tweet_text_news24 %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
tweet_text_news24 %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
tweet_text_news24 %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE) %>%
filter(n > 10) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL)
user_eNCA <- rtweet::lookup_users(users = "eNCA")
View(user_eNCA)
tweets_eNCA <- get_timeline(301309392, n = 100)
View(tweets_eNCA)
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen name", values_to = "proportion")
library(tidyr)
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen name", values_to = "proportion")
tidy_news24 <- tweets_news24 %>%
select(screen_name, status_id, text) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_eNCA <- tweets_eNCA %>%
select(screen_name, status_id, text) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen name", values_to = "proportion")
frequency
install.packages("scales")
library(scales)
ggplot(frequency, aes(x = proportion, y = `News24`,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~screen_name, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
View(frequency)
ggplot(frequency, aes(x = proportion, y = `News24`,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~screen name, ncol = 2) +
ggplot(frequency, aes(x = proportion, y = `News24`,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
ggplot(frequency, aes(x = proportion, y = `News24`,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen name", values_to = "proportion")
ggplot(frequency, aes(x = proportion, y = `News24`,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen_name", values_to = "proportion")
ggplot(frequency, aes(x = proportion, y = `News24`,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~screen_name, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
View(frequency)
ggplot(frequency, aes(x = proportion, y = News24,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
ggplot(frequency, aes(x = proportion, y = News24,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~screen name, ncol = 2) +
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen_name", values_to = "proportion")
ggplot(frequency, aes(x = proportion, y = News24,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~screen_name, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
ggplot(frequency, aes(x = proportion, y = News24,
color = abs(News24 - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~screen_name, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
`
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen name", values_to = "proportion")
ggplot(frequency, aes(x = proportion, y = News24,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
ggplot(frequency, aes(x = proportion, y = `News24`,
color = abs(`News24` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "News24", x = NULL)
ggplot(frequency, aes(x = proportion, y = `screen name`,
color = proportion)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "Proportion", x = NULL)
ggplot(frequency, aes(x = proportion, y = `screen name`,
color = proportion)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "Proportion", x = NULL)
ggplot(frequency, aes(x = proportion, y = word,
color = proportion)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "Proportion", x = NULL)
```{r fig.height=15}
tidy_news24 <- tweets_news24 %>%
select(screen_name, status_id, text) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_eNCA <- tweets_eNCA %>%
select(screen_name, status_id, text) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
frequency <- bind_rows(mutate(tidy_news24, screen_name = "News24"),
mutate(tidy_eNCA, screen_name = "eNCA")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(screen_name, word) %>%
group_by(screen_name) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
pivot_wider(names_from = screen_name, values_from = proportion) %>%
pivot_longer(`News24`:`eNCA`,
names_to = "screen name", values_to = "proportion")
ggplot(frequency, aes(x = proportion, y = word,
color = proportion)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "gray75") +
facet_wrap(~`screen name`, ncol = 2) +
theme(legend.position="none") +
labs(y = "Proportion", x = NULL)
